app.controller("MapCtrl",
	["$scope", "$compile", "$rootScope",
		function($scope, $compile, $rootScope){


    $scope.layers = {
        osm: L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png'),
        blanco: L.tileLayer.wms('http://geoserver6.lizard.net/geoserver/deltaportaal/wms', {'layers': 'basiskaart'}),
        transport: L.tileLayer('http://{s}.tile2.opencyclemap.org/transport/{z}/{x}/{y}.png'),
        bestuurlijke_grenzen: L.tileLayer('http://dev1.nxt.lizard.net:9000/bestuurlijke_grenzen/{z}/{x}/{y}.png'),
        gesloten_leiding: {'geslotenleiding': 'http://dev1.nxt.lizard.net:9000/geslotenleiding/{z}/{x}/{y}.png'}
    };

    $scope.map = L.map('map', {
        center: new L.LatLng(52.0992287, 5.5698782),
        zoomControl: false,
        keyboard: false, // solves problem with Chrome top bar hiding on map click, but prevents keyboard navigation... has to do with tabindex being autogenerated in newest leaflet version!
        zoom: 8,
        layers: [$scope.layers.transport]
    });



    $scope.baseMaps = {
        "Blanco": $scope.layers.blanco,
        "Openstreetmap": $scope.layers.osm,
        "Transport": $scope.layers.transport,
        "Bestuurlijke grenzen": $scope.layers.bestuurlijke_grenzen
    };

    var wijken = $.getJSON('/static/data/wijken.geojson', function (data) {
        L.geoJson(data, {
            style: function (feature) {
                return {color: feature.properties.color};
            },
            onEachFeature: function (feature, layer) {
                layer.bindPopup(feature.properties.description);
            }
        }).addTo($scope.map);
    });

    L.control.layers($scope.baseMaps).addTo($scope.map);

    L.tileLayer($scope.layers.geslotenleiding,
                {'minZoom': 14})
        .addTo($scope.map)
        .bringToFront();

    var utfGrid = new L.UtfGrid('http://dev1.nxt.lizard.net:9000/bestuurlijke_grenzen_utfgrid/{z}/{x}/{y}.json?callback={cb}', {resolution: 4});

    $scope.map.addLayer(utfGrid);

    utfGrid.on('click', function (e) {
        if (e.data) {
            // alert('click:' + e.data.gemeentenaam + ', vrouwen: ' + e.data.vrouwen + ',mannen: ' + e.data.mannen);
        } else {
            // alert('click: nothing');
        }
    });

    utfGrid.on('mouseover', function (e) {
        console.log('mouseover: ' + e.data.gemeentenaam);
    });
    utfGrid.on('mousemove', function (e) {
        console.log('mousemove: ' + e.data.gemeentenaam);
    });
    utfGrid.on('mouseout', function (e) {
        console.log('mouseout: ' + e.data.gemeentenaam);
    });


    L.tileLayer('http://{s}.tile.cloudmade.com/4e5f745e28654b7eb26aab577eed79ee/997/256/{z}/{x}/{y}.png', {
        attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="http://cloudmade.com">CloudMade</a>',
        maxZoom: 18
    }).addTo($scope.map);
    $scope.item = "Testing";
    // var hotel_info = $compile('<span class="popup-container" ng-click="alert(item)">Radisson</span>')($scope);
    // L.marker([51.5, -0.09]).addTo(map).bindPopup(hotel_info);
    
    $scope.alert = function(item) {
      alert(item);
    };

    $scope.map.on('click', function(e) {
        $rootScope.$broadcast('mapclick', e.latlng);
    });

    $scope.$on('panzoom', function(e,lat,lon) {
        $scope.map.setZoom(17);
        $scope.map.panTo(new L.LatLng(lat, lon));
    });

}]);