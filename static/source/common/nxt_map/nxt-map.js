app.controller("MapCtrl",
	["$scope", "$rootScope",
		function($scope, $rootScope) {

    // $scope.layers = {
    //     osm: L.tileLayer('http://dev1.nxt.lizard.net:9000/osm_nens/{z}/{x}/{y}.png'),
    //     // osm: L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
    //     //   attribution: 'Map data &copy; 2011 OpenStreetMap contributors'
    //     //   }),
    //     sewerage: L.tileLayer('http://dev1.nxt.lizard.net:9000/sewerage/{z}/{x}/{y}.png', {
    //       attribution: 'Nelen & Schuurmans &copy; 2013'
    //       }),
    // };

    // $scope.active_layers = [$scope.layers.osm];

    // $scope.map = L.map('map', {
    //     center: new L.LatLng(52.0992287, 5.5698782),
    //     zoomControl: false,
    //     keyboard: false, // solves problem with Chrome top bar hiding on map click, but prevents keyboard navigation... has to do with tabindex being autogenerated in newest leaflet version!
    //     zoom: 8,
    //     layers: mapLayers.getLayers()
    // });

    // $scope.baseMaps = {
    //     "Open Street Map": $scope.layers.osm,
    // };

   //var utfGrid = new L.UtfGrid('http://dev1.nxt.lizard.net:9000/bestuurlijke_grenzen_utfgrid/{z}/{x}/{y}.json?callback={cb}', {resolution: 4});

    // $scope.map.addLayer(utfGrid);

    //utfGrid.on('click', function (e) {
        //if (e.data) {
             //alert('click:' + e.data.gemeentenaam + ', vrouwen: ' + e.data.vrouwen + ',mannen: ' + e.data.mannen);
        //} else {
             //alert('click: nothing');
        //}
    //});

    //utfGrid.on('mouseover', function (e) {
        //console.log('mouseover: ' + e.data.gemeentenaam);
    //});
    //utfGrid.on('mousemove', function (e) {
        //console.log('mousemove: ' + e.data.gemeentenaam);
    //});
    //utfGrid.on('mouseout', function (e) {
        //console.log('mouseout: ' + e.data.gemeentenaam);
    //});


    //var parks = L.tileLayer.geoJson('http://{s}.tile.openstreetmap.us/vectiles-land-usages/{z}/{x}/{y}.json', {'minZoom': 16}, {
      //onEachFeature: function(f, l) {
        //var array, key, value;
        //array = (function() {
          //var _ref, _results;
          //_ref = f.properties;
          //_results = [];
          //for (var key in _ref) {
            //value = _ref[key];
            //_results.push("" + key + ": " + value);
          //}
          //return _results;
        //})();
        //return l.bindPopup(array.join('<br/>'));
      //},
      //style: function(f) {
        //var out;
        //out = {
          //fillOpacity: 1,
          //stroke: false
        //};
        //switch (f.properties.kind) {
          //case 'park':
          //case 'common':
          //case 'grass':
            //out.fillColor = 'rgb(115,178,115)';
            //break;
          //case 'golf_course':
          //case 'recreation_ground':
          //case 'pitch':
          //case 'playground':
            //out.fillColor = 'rgb(110,183,110)';
            //break;
          //case 'conservation':
          //case 'farm':
          //case 'farmland':
            //out.fillColor = 'rgb(143,219,143)';
            //break;
          //case 'cemetery':
            //out.fillColor = 'rgb(78,120,78)';
            //break;
          //case 'university':
          //case 'college':
            //out.fillColor = 'rgb(77,50,230)';
            //break;
          //case 'school':
            //out.fillColor = 'rgb(125,106,235)';
            //break;
          //case 'forest':
            //out.fillColor = 'rgb(26,112,26)';
            //break;
          //case 'parking':
          //case 'industrial':
          //case 'fuel':
            //out.fillColor = 'rgb(0,0,0)';
            //break;
          //case 'commercial':
          //case 'retail':
          //case 'hospital':
            //out.fillColor = 'rgb(255,193,69)';
            //break;
          //case 'residential':
            //out.fillColor = 'rgb(212,47,58)';
            //break;
          //case 'railway':
          //case 'pedestrian':
          //case 'parking':
            //out.fillColor = 'rgb(204,204,204)';
            //break;
          //default:
            //out.fillColor = 'rgb(224,224,224)';
        //}
        //return out;
      //}
    //});

    //var water = L.tileLayer.geoJson('http://{s}.tile.openstreetmap.us/vectiles-water-areas/{z}/{x}/{y}.json', {'minZoom': 16}, {
      //style: {
        //fillColor: 'rgb(151,219,242)',
        //fillOpacity: 1,
        //stroke: false,
        //clickable: false
      //}
    //});


    //var sewerage = L.tileLayer.geoJson('http://dev1.nxt.lizard.net:9000/sewerage_json/{z}/{x}/{y}.geojson', {'tms': true,'minZoom': 16}, {
      //onEachFeature: function(feature, l) {
         //Put a click handler on the element
        //var retval = l.on('click', function() {
            //$rootScope.$broadcast('featureclick', feature.properties);
        //});

         //Unbind the popup handler for the element and return.
        //l.unbindPopup();
        //return retval;
      //},
      //style: {
        //fillColor: 'rgb(255,32,0)',
        //fillOpacity: 0.5,
        //weight: 5,
        //color: 'rgb(255,32,0)'
      //}
    //});


    //var roads = L.tileLayer.geoJson('http://{s}.tile.openstreetmap.us/vectiles-highroad/{z}/{x}/{y}.json', {'minZoom': 16}, {
      //onEachFeature: function(feature, l) {
         //Put a click handler on the element
        //var retval = l.on('click', function() {
            //$rootScope.$broadcast('featureclick', feature.properties);
        //});

         //Unbind the popup handler for the element and return.
        //l.unbindPopup();
        //return retval;
      //},
      //style: {
        //fillColor: 'rgb(0,0,0)',
        //fillOpacity: 0.5,
        //weight: 5,
        //color: 'rgb(0,0,0)'
      //}
    //});

    // var stedelijkwater = { 
    //   "Watersysteem": {
    //     //"Water": water,
    //     "Sewerage": $scope.layers.sewerage
    //         }
    //   };
    // L.control.groupedLayers($scope.baseMaps, stedelijkwater).addTo($scope.map);



    
    // leaflet.map.on('click', function(e) {
    //     $rootScope.$broadcast('mapclick', e.latlng);
    // });

    $scope.$on('panzoom', function(e,lat,lon) {
        $scope.map.setZoom(17);
        $scope.map.panTo(new L.LatLng(lat, lon));
    });

}]);


// app.controller("MapLayerCtrl", ["$scope", "$resource", "$rootScope","leaflet", 
//   function($scope, $resource, $rootScope, leaflet){

//     $scope.apiLayerGroups = $resource('/api/v1/layergroups//:id/', 
//       {
//         id:'@id'
//       }, {
//         'query': {method: "GET", isArray:false}
//       })

//     $scope.apiLayerGroups.query(function(response){
//       $scope.layergroups = response.results;
//     });


//     $scope.switch = function(layer) {
//       if (layer.active){
//         layer.active = false;
//         leaflet.removeFgLayer(layer);
//         } else {
//         layer.active = true;
//         leaflet.addFgLayer(layer);
//       };
//       if (layer.type === 'json'){
//         // layer.leafletLayer = L.jsonLayer(layer.url);
//       } else {
//         console.log(layer.leafletLayer)
//         if (layer.leafletLayer === undefined){
//           layer.leafletLayer = L.tileLayer(layer.url);
//         }
//       }

//       if (layer.name == 'Sewerage'){
//         // console.log(layer.name)
//         // var utfLayer = {
//         //   name: "Sewerage Utf",
//         //   url: "http://dev1.nxt.lizard.net:9000/sewerage_grid/{z}/{x}/{y}.json",
//         //   leafletLayer: new L.UtfGrid(this.url)
//         // }
//         utfLayer = new L.UtfGrid("http://dev1.nxt.lizard.net:9000/sewerage_grid/{z}/{x}/{y}.json?callback={cb}", 
//         {
//           resolution: 4
//         });
//         leaflet.map.addLayer(utfLayer);
//         utfLayer.on('click', function(e){
//           if (e.data){
//             $rootScope.$broadcast('open_box', e.data);
//           } else {
//             console.log(e)
//           }
//         })
//       }
//     };

    
// }]);


app.service("leaflet", function(){
  var map = L.map('map', {
    center: new L.LatLng(52.0992287, 5.5698782),
    zoomControl: false,
    keyboard: false, // solves problem with Chrome top bar hiding on map click, but prevents keyboard navigation... has to do with tabindex being autogenerated in newest leaflet version!
    zoom: 8,
  });

  var foregroundLayers = [];

  var backgroundLayers = [
  {
    active: true,
    id: 1,
    name: "Open Street Map",
    url: "http://dev1.nxt.lizard.net:9000/osm_nens/{z}/{x}/{y}.png",
    leafletLayer: L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png')
  }];

  var activeBgLayer = null;

  var getBgLayer = function(){
    return activeBgLayer;
  };

  var addFgLayer = function(layer){
    layer.active = true;
    layer.order = 1;
    if (layer.leafletLayer === undefined){
      layer.leafletLayer = L.tileLayer(layer.url);
    }
    map.addLayer(layer.leafletLayer);
    foregroundLayers.push(layer);
  };

  var removeFgLayer = function(layer){
    layer.active = false;
    map.removeLayer(layer.leafletLayer);
    var index = foregroundLayers.indexOf(layer);
    foregroundLayers.splice(index, 1);
  };

  var switchBgLayer = function(id){
      if (activeBgLayer !== null){
        map.removeLayer(activeBgLayer);    
      }
      backgroundLayers.forEach(function(layer){
        if ((layer.active) && (layer.id != id)){
          layer.active = false;
        }
        if (layer.id == id){
          layer.active = true;
          activeBgLayer = layer.leafletLayer;
        }
        });
      map.addLayer(activeBgLayer, true);
      activeBgLayer.bringToBack();
  };
  switchBgLayer(1);
  return{
    map: map,
    backgroundLayers: backgroundLayers,
    activeBgLayer: activeBgLayer,
    getBgLayer: getBgLayer,
    switchBgLayer: switchBgLayer,
    foregroundLayers: foregroundLayers,
    addFgLayer: addFgLayer,
    removeFgLayer: removeFgLayer
  }
});